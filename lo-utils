#!/bin/bash

#[ -n "$LO_UTILS" ] && return || readonly LO_UTILS=1

. rabot-utils
if [ "$?" -ne "0" ]; then
  echo "$0: Error while sourcing rabot-utils" >&2
  exit 1
fi


############################################################
#
# Get ID of the pane with the given title, or the current pane
#
# getPaneID [PANE_TITLE]
#
function getPaneID
{
    if [ -n "$1" ]; then
        tmux list-panes -F "#{pane_id} #{pane_title}" | grep "${1}$" | cut -d ' ' -f 1
    else
        tmux display-message -p "#{pane_id}"
    fi
}


############################################################
#
# Get ID of the window with the given name, or the current window
#
# getWindowID [WINDOW_NAME]
#
function getWindowID
{
    if [ -n "$1" ]; then
        tmux list-windows -F "#{window_id} #{window_name}" | grep "${1}$" | cut -d ' ' -f 1
    else
        tmux display-message -p "#{window_id}"
    fi
}


############################################################
#
# Send a string to the monitor process
#
#  sendStringToMonitor [STRING]
#
function sendStringToMonitor
{
    : ${monitorId:=$(getPaneID lo-monitor)}
    tmux send-keys -t "$monitorId" ",k$1" Enter
}


############################################################
#
# gotoPalico PATH [LINE [COLUMN]]
#
function gotoPalico
{
    local path="$1"
    local line="${2:-0}"
    local column="${3:-0}"

    if [ -n "$path" ]; then
        tmux send-keys -t $(getPaneID lo-edit) ":e $path|call cursor($line,$column)|norm zz" Enter
    fi
}

export -f getPaneID
export -f gotoPalico
export -f sendStringToMonitor


